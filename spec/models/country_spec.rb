require 'rails_helper'
require "savon/mock/spec_helper"

RSpec.describe Country, type: :model do
  #include Savon::SpecHelper
  before :all do
    #savon.mock!
  end
  
  #pending "add some examples to (or delete) #{__FILE__}"
   it "to check if get_countries reuturn data of all countries" do
     client = Savon::Client.new(wsdl: "http://www.webservicex.net/country.asmx?WSDL")
     response = {:get_countries_response=>{:get_countries_result=>"<NewDataSet>\n  <Table>\n    <Name>Afghanistan, Islamic State of</Name>\n  </Table>\n  <Table>\n    <Name>Albania</Name>\n  </Table>\n  <Table>\n    <Name>Algeria</Name>\n  </Table>\n  <Table>\n    <Name>American Samoa</Name>\n  </Table>\n  <Table>\n    <Name>Andorra, Principality of</Name>\n  </Table>\n  <Table>\n    <Name>Angola</Name>\n  </Table>\n  <Table>\n    <Name>Anguilla</Name>\n  </Table>\n  <Table>\n    <Name>Antarctica</Name>\n  </Table>\n  <Table>\n    <Name>Antigua and Barbuda</Name>\n  </Table>\n  <Table>\n    <Name>Argentina</Name>\n  </Table>\n  <Table>\n    <Name>Armenia</Name>\n  </Table>\n  <Table>\n    <Name>Aruba</Name>\n  </Table>\n  <Table>\n    <Name>Australia</Name>\n  </Table>\n  <Table>\n    <Name>Austria</Name>\n  </Table>\n  <Table>\n    <Name>Azerbaidjan</Name>\n  </Table>\n  <Table>\n    <Name>Bahamas</Name>\n  </Table>\n  <Table>\n    <Name>Bahrain</Name>\n  </Table>\n  <Table>\n    <Name>Bangladesh</Name>\n  </Table>\n  <Table>\n    <Name>Barbados</Name>\n  </Table>\n  <Table>\n    <Name>Belarus</Name>\n  </Table>\n  <Table>\n    <Name>Belgium</Name>\n  </Table>\n  <Table>\n    <Name>Belize</Name>\n  </Table>\n  <Table>\n    <Name>Benin</Name>\n  </Table>\n  <Table>\n    <Name>Bermuda</Name>\n  </Table>\n  <Table>\n    <Name>Bhutan</Name>\n  </Table>\n  <Table>\n    <Name>Bolivia</Name>\n  </Table>\n  <Table>\n    <Name>Bosnia-Herzegovina</Name>\n  </Table>\n  <Table>\n    <Name>Botswana</Name>\n  </Table>\n  <Table>\n    <Name>Bouvet Island</Name>\n  </Table>\n  <Table>\n    <Name>Brazil</Name>\n  </Table>\n  <Table>\n    <Name>British Indian Ocean Territory</Name>\n  </Table>\n  <Table>\n    <Name>Brunei Darussalam</Name>\n  </Table>\n  <Table>\n    <Name>Bulgaria</Name>\n  </Table>\n  <Table>\n    <Name>Burkina Faso</Name>\n  </Table>\n  <Table>\n    <Name>Burundi</Name>\n  </Table>\n  <Table>\n    <Name>Cambodia, Kingdom of</Name>\n  </Table>\n  <Table>\n    <Name>Cameroon</Name>\n  </Table>\n  <Table>\n    <Name>Canada</Name>\n  </Table>\n  <Table>\n    <Name>Cape Verde</Name>\n  </Table>\n  <Table>\n    <Name>Cayman Islands</Name>\n  </Table>\n  <Table>\n    <Name>Central African Republic</Name>\n  </Table>\n  <Table>\n    <Name>Chad</Name>\n  </Table>\n  <Table>\n    <Name>Chile</Name>\n  </Table>\n  <Table>\n    <Name>China</Name>\n  </Table>\n  <Table>\n    <Name>Christmas Island</Name>\n  </Table>\n  <Table>\n    <Name>Cocos (Keeling) Islands</Name>\n  </Table>\n  <Table>\n    <Name>Colombia</Name>\n  </Table>\n  <Table>\n    <Name>Comoros</Name>\n  </Table>\n  <Table>\n    <Name>Congo</Name>\n  </Table>\n  <Table>\n    <Name>Congo, The Democratic Republic of the</Name>\n  </Table>\n  <Table>\n    <Name>Cook Islands</Name>\n  </Table>\n  <Table>\n    <Name>Costa Rica</Name>\n  </Table>\n  <Table>\n    <Name>Croatia</Name>\n  </Table>\n  <Table>\n    <Name>Cuba</Name>\n  </Table>\n  <Table>\n    <Name>Cyprus</Name>\n  </Table>\n  <Table>\n    <Name>Czech Republic</Name>\n  </Table>\n  <Table>\n    <Name>Denmark</Name>\n  </Table>\n  <Table>\n    <Name>Djibouti</Name>\n  </Table>\n  <Table>\n    <Name>Dominica</Name>\n  </Table>\n  <Table>\n    <Name>Dominican Republic</Name>\n  </Table>\n  <Table>\n    <Name>East Timor</Name>\n  </Table>\n  <Table>\n    <Name>Ecuador</Name>\n  </Table>\n  <Table>\n    <Name>Egypt</Name>\n  </Table>\n  <Table>\n    <Name>El Salvador</Name>\n  </Table>\n  <Table>\n    <Name>Equatorial Guinea</Name>\n  </Table>\n  <Table>\n    <Name>Eritrea</Name>\n  </Table>\n  <Table>\n    <Name>Estonia</Name>\n  </Table>\n  <Table>\n    <Name>Ethiopia</Name>\n  </Table>\n  <Table>\n    <Name>Falkland Islands</Name>\n  </Table>\n  <Table>\n    <Name>Faroe Islands</Name>\n  </Table>\n  <Table>\n    <Name>Fiji</Name>\n  </Table>\n  <Table>\n    <Name>Finland</Name>\n  </Table>\n  <Table>\n    <Name>Former Czechoslovakia</Name>\n  </Table>\n  <Table>\n    <Name>Former USSR</Name>\n  </Table>\n  <Table>\n    <Name>France</Name>\n  </Table>\n  <Table>\n    <Name>France (European Territory)</Name>\n  </Table>\n  <Table>\n    <Name>French Guyana</Name>\n  </Table>\n  <Table>\n    <Name>French Southern Territories</Name>\n  </Table>\n  <Table>\n    <Name>Gabon</Name>\n  </Table>\n  <Table>\n    <Name>Gambia</Name>\n  </Table>\n  <Table>\n    <Name>Georgia</Name>\n  </Table>\n  <Table>\n    <Name>Germany</Name>\n  </Table>\n  <Table>\n    <Name>Ghana</Name>\n  </Table>\n  <Table>\n    <Name>Gibraltar</Name>\n  </Table>\n  <Table>\n    <Name>Great Britain</Name>\n  </Table>\n  <Table>\n    <Name>Greece</Name>\n  </Table>\n  <Table>\n    <Name>Greenland</Name>\n  </Table>\n  <Table>\n    <Name>Grenada</Name>\n  </Table>\n  <Table>\n    <Name>Guadeloupe (French)</Name>\n  </Table>\n  <Table>\n    <Name>Guam (USA)</Name>\n  </Table>\n  <Table>\n    <Name>Guatemala</Name>\n  </Table>\n  <Table>\n    <Name>Guinea</Name>\n  </Table>\n  <Table>\n    <Name>Guinea Bissau</Name>\n  </Table>\n  <Table>\n    <Name>Guyana</Name>\n  </Table>\n  <Table>\n    <Name>Haiti</Name>\n  </Table>\n  <Table>\n    <Name>Heard and McDonald Islands</Name>\n  </Table>\n  <Table>\n    <Name>Holy See (Vatican City State)</Name>\n  </Table>\n  <Table>\n    <Name>Honduras</Name>\n  </Table>\n  <Table>\n    <Name>Hong Kong</Name>\n  </Table>\n  <Table>\n    <Name>Hungary</Name>\n  </Table>\n  <Table>\n    <Name>Iceland</Name>\n  </Table>\n  <Table>\n    <Name>India</Name>\n  </Table>\n  <Table>\n    <Name>Indonesia</Name>\n  </Table>\n  <Table>\n    <Name>Iran</Name>\n  </Table>\n  <Table>\n    <Name>Iraq</Name>\n  </Table>\n  <Table>\n    <Name>Ireland</Name>\n  </Table>\n  <Table>\n    <Name>Israel</Name>\n  </Table>\n  <Table>\n    <Name>Italy</Name>\n  </Table>\n  <Table>\n    <Name>Ivory Coast (Cote D'Ivoire)</Name>\n  </Table>\n  <Table>\n    <Name>Jamaica</Name>\n  </Table>\n  <Table>\n    <Name>Japan</Name>\n  </Table>\n  <Table>\n    <Name>Jordan</Name>\n  </Table>\n  <Table>\n    <Name>Kazakhstan</Name>\n  </Table>\n  <Table>\n    <Name>Kenya</Name>\n  </Table>\n  <Table>\n    <Name>Kiribati</Name>\n  </Table>\n  <Table>\n    <Name>Kuwait</Name>\n  </Table>\n  <Table>\n    <Name>Kyrgyz Republic (Kyrgyzstan)</Name>\n  </Table>\n  <Table>\n    <Name>Laos</Name>\n  </Table>\n  <Table>\n    <Name>Latvia</Name>\n  </Table>\n  <Table>\n    <Name>Lebanon</Name>\n  </Table>\n  <Table>\n    <Name>Lesotho</Name>\n  </Table>\n  <Table>\n    <Name>Liberia</Name>\n  </Table>\n  <Table>\n    <Name>Libya</Name>\n  </Table>\n  <Table>\n    <Name>Liechtenstein</Name>\n  </Table>\n  <Table>\n    <Name>Lithuania</Name>\n  </Table>\n  <Table>\n    <Name>Luxembourg</Name>\n  </Table>\n  <Table>\n    <Name>Macau</Name>\n  </Table>\n  <Table>\n    <Name>Macedonia</Name>\n  </Table>\n  <Table>\n    <Name>Madagascar</Name>\n  </Table>\n  <Table>\n    <Name>Malawi</Name>\n  </Table>\n  <Table>\n    <Name>Malaysia</Name>\n  </Table>\n  <Table>\n    <Name>Maldives</Name>\n  </Table>\n  <Table>\n    <Name>Mali</Name>\n  </Table>\n  <Table>\n    <Name>Malta</Name>\n  </Table>\n  <Table>\n    <Name>Marshall Islands</Name>\n  </Table>\n  <Table>\n    <Name>Martinique (French)</Name>\n  </Table>\n  <Table>\n    <Name>Mauritania</Name>\n  </Table>\n  <Table>\n    <Name>Mauritius</Name>\n  </Table>\n  <Table>\n    <Name>Mayotte</Name>\n  </Table>\n  <Table>\n    <Name>Mexico</Name>\n  </Table>\n  <Table>\n    <Name>Micronesia</Name>\n  </Table>\n  <Table>\n    <Name>Moldavia</Name>\n  </Table>\n  <Table>\n    <Name>Monaco</Name>\n  </Table>\n  <Table>\n    <Name>Mongolia</Name>\n  </Table>\n  <Table>\n    <Name>Montserrat</Name>\n  </Table>\n  <Table>\n    <Name>Morocco</Name>\n  </Table>\n  <Table>\n    <Name>Mozambique</Name>\n  </Table>\n  <Table>\n    <Name>Myanmar</Name>\n  </Table>\n  <Table>\n    <Name>Namibia</Name>\n  </Table>\n  <Table>\n    <Name>Nauru</Name>\n  </Table>\n  <Table>\n    <Name>Nepal</Name>\n  </Table>\n  <Table>\n    <Name>Netherlands</Name>\n  </Table>\n  <Table>\n    <Name>Netherlands Antilles</Name>\n  </Table>\n  <Table>\n    <Name>Neutral Zone</Name>\n  </Table>\n  <Table>\n    <Name>New Caledonia (French)</Name>\n  </Table>\n  <Table>\n    <Name>New Zealand</Name>\n  </Table>\n  <Table>\n    <Name>Nicaragua</Name>\n  </Table>\n  <Table>\n    <Name>Niger</Name>\n  </Table>\n  <Table>\n    <Name>Nigeria</Name>\n  </Table>\n  <Table>\n    <Name>Niue</Name>\n  </Table>\n  <Table>\n    <Name>Norfolk Island</Name>\n  </Table>\n  <Table>\n    <Name>North Korea</Name>\n  </Table>\n  <Table>\n    <Name>Northern Mariana Islands</Name>\n  </Table>\n  <Table>\n    <Name>Norway</Name>\n  </Table>\n  <Table>\n    <Name>Oman</Name>\n  </Table>\n  <Table>\n    <Name>Pakistan</Name>\n  </Table>\n  <Table>\n    <Name>Palau</Name>\n  </Table>\n  <Table>\n    <Name>Panama</Name>\n  </Table>\n  <Table>\n    <Name>Papua New Guinea</Name>\n  </Table>\n  <Table>\n    <Name>Paraguay</Name>\n  </Table>\n  <Table>\n    <Name>Peru</Name>\n  </Table>\n  <Table>\n    <Name>Philippines</Name>\n  </Table>\n  <Table>\n    <Name>Pitcairn Island</Name>\n  </Table>\n  <Table>\n    <Name>Poland</Name>\n  </Table>\n  <Table>\n    <Name>Polynesia (French)</Name>\n  </Table>\n  <Table>\n    <Name>Portugal</Name>\n  </Table>\n  <Table>\n    <Name>Puerto Rico</Name>\n  </Table>\n  <Table>\n    <Name>Qatar</Name>\n  </Table>\n  <Table>\n    <Name>Reunion (French)</Name>\n  </Table>\n  <Table>\n    <Name>Romania</Name>\n  </Table>\n  <Table>\n    <Name>Russian Federation</Name>\n  </Table>\n  <Table>\n    <Name>Rwanda</Name>\n  </Table>\n  <Table>\n    <Name>S. Georgia &amp; S. Sandwich Isls.</Name>\n  </Table>\n  <Table>\n    <Name>Saint Helena</Name>\n  </Table>\n  <Table>\n    <Name>Saint Kitts &amp; Nevis Anguilla</Name>\n  </Table>\n  <Table>\n    <Name>Saint Lucia</Name>\n  </Table>\n  <Table>\n    <Name>Saint Pierre and Miquelon</Name>\n  </Table>\n  <Table>\n    <Name>Saint Tome (Sao Tome) and Principe</Name>\n  </Table>\n  <Table>\n    <Name>Saint Vincent &amp; Grenadines</Name>\n  </Table>\n  <Table>\n    <Name>Samoa</Name>\n  </Table>\n  <Table>\n    <Name>San Marino</Name>\n  </Table>\n  <Table>\n    <Name>Saudi Arabia</Name>\n  </Table>\n  <Table>\n    <Name>Senegal</Name>\n  </Table>\n  <Table>\n    <Name>Seychelles</Name>\n  </Table>\n  <Table>\n    <Name>Sierra Leone</Name>\n  </Table>\n  <Table>\n    <Name>Singapore</Name>\n  </Table>\n  <Table>\n    <Name>Slovak Republic</Name>\n  </Table>\n  <Table>\n    <Name>Slovenia</Name>\n  </Table>\n  <Table>\n    <Name>Solomon Islands</Name>\n  </Table>\n  <Table>\n    <Name>Somalia</Name>\n  </Table>\n  <Table>\n    <Name>South Africa</Name>\n  </Table>\n  <Table>\n    <Name>South Korea</Name>\n  </Table>\n  <Table>\n    <Name>Spain</Name>\n  </Table>\n  <Table>\n    <Name>Sri Lanka</Name>\n  </Table>\n  <Table>\n    <Name>Sudan</Name>\n  </Table>\n  <Table>\n    <Name>Suriname</Name>\n  </Table>\n  <Table>\n    <Name>Svalbard and Jan Mayen Islands</Name>\n  </Table>\n  <Table>\n    <Name>Swaziland</Name>\n  </Table>\n  <Table>\n    <Name>Sweden</Name>\n  </Table>\n  <Table>\n    <Name>Switzerland</Name>\n  </Table>\n  <Table>\n    <Name>Syria</Name>\n  </Table>\n  <Table>\n    <Name>Tadjikistan</Name>\n  </Table>\n  <Table>\n    <Name>Taiwan</Name>\n  </Table>\n  <Table>\n    <Name>Tanzania</Name>\n  </Table>\n  <Table>\n    <Name>Thailand</Name>\n  </Table>\n  <Table>\n    <Name>Togo</Name>\n  </Table>\n  <Table>\n    <Name>Tokelau</Name>\n  </Table>\n  <Table>\n    <Name>Tonga</Name>\n  </Table>\n  <Table>\n    <Name>Trinidad and Tobago</Name>\n  </Table>\n  <Table>\n    <Name>Tunisia</Name>\n  </Table>\n  <Table>\n    <Name>Turkey</Name>\n  </Table>\n  <Table>\n    <Name>Turkmenistan</Name>\n  </Table>\n  <Table>\n    <Name>Turks and Caicos Islands</Name>\n  </Table>\n  <Table>\n    <Name>Tuvalu</Name>\n  </Table>\n  <Table>\n    <Name>Uganda</Name>\n  </Table>\n  <Table>\n    <Name>Ukraine</Name>\n  </Table>\n  <Table>\n    <Name>United Arab Emirates</Name>\n  </Table>\n  <Table>\n    <Name>United Kingdom</Name>\n  </Table>\n  <Table>\n    <Name>United States</Name>\n  </Table>\n  <Table>\n    <Name>Uruguay</Name>\n  </Table>\n  <Table>\n    <Name>USA Minor Outlying Islands</Name>\n  </Table>\n  <Table>\n    <Name>Uzbekistan</Name>\n  </Table>\n  <Table>\n    <Name>Vanuatu</Name>\n  </Table>\n  <Table>\n    <Name>Venezuela</Name>\n  </Table>\n  <Table>\n    <Name>Vietnam</Name>\n  </Table>\n  <Table>\n    <Name>Virgin Islands (British)</Name>\n  </Table>\n  <Table>\n    <Name>Virgin Islands (USA)</Name>\n  </Table>\n  <Table>\n    <Name>Wallis and Futuna Islands</Name>\n  </Table>\n  <Table>\n    <Name>Western Sahara</Name>\n  </Table>\n  <Table>\n    <Name>Yemen</Name>\n  </Table>\n  <Table>\n    <Name>Yugoslavia</Name>\n  </Table>\n  <Table>\n    <Name>Zaire</Name>\n  </Table>\n  <Table>\n    <Name>Zambia</Name>\n  </Table>\n  <Table>\n    <Name>Zimbabwe</Name>\n  </Table>\n</NewDataSet>", :@xmlns=>"http://www.webserviceX.NET"}}
     expect(client.call(:get_countries,:message => {}).body).to eql response
   end
   
   it "should create countries in database" do
      Country.delete_all
      expect{Country.push_api_country_list_to_db}.not_to raise_error
   end
   
   it "should create countries and result in change in count of countries in database" do
      Country.delete_all
      expect{Country.push_api_country_list_to_db}.to change{Country.count}
   end
   
   it "should not create duplicate countries in database" do
      if (Country.count == 0)
        Country.push_api_country_list_to_db
      end
      expect{Country.push_api_country_list_to_db}.to raise_error
   end
   
   it "get_countries_data method should get an Array" do 
     expect(Country.get_countries_data).to be_an Array
   end   
   
   it "get_countries_data method should get all countries Data" do 
     expect(Country.get_countries_data).to include("India")
   end
   
   it "get_countries_data method should not include Cities" do 
     expect(Country.get_countries_data).not_to include("Hyderabad")
   end   
  
end
